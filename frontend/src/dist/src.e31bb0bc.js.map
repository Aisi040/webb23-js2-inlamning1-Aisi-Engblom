{"version":3,"sources":["index.js"],"names":["currentScore","currentPlayerName","startGame","document","getElementById","value","style","display","alert","window","playRound","playerChoice","choices","computerChoice","Math","floor","random","textContent","fetch","method","headers","body","JSON","stringify","name","score","then","GetHighscores","response","json","data","highscoresList","innerHTML","forEach","entry","li","createElement","concat","append"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..","sourcesContent":["let currentScore = 0;  // Tracks the current score of the player.\r\nlet currentPlayerName = '';  // Holds the name of the player.\r\n\r\n// Initiates the game by displaying the game area if a name is provided.\r\nfunction startGame() {\r\n    currentPlayerName = document.getElementById('playerName').value;\r\n    \r\n    if (currentPlayerName) {\r\n        document.getElementById('gameArea').style.display = 'block';\r\n    } else {\r\n        alert('Ange ditt namn för att starta spelet.');\r\n    }\r\n}\r\n\r\nwindow.startGame = startGame;\r\n\r\n// Executes a round of the game based on the player's choice.\r\nfunction playRound(playerChoice) {\r\n    const choices = ['sten', 'sax', 'påse'];\r\n    const computerChoice = choices[Math.floor(Math.random() * 3)];  // Randomly selects computer's choice.\r\n    \r\n    // Display player's and computer's choices.\r\n    document.getElementById('playerChoice').textContent = playerChoice;\r\n    document.getElementById('computerChoice').textContent = computerChoice;\r\n\r\n    // Determine the winner of the round.\r\n    if (playerChoice === computerChoice) {\r\n        document.getElementById('winner').textContent = 'Oavgjort!';\r\n    } else if (\r\n        (playerChoice === 'sten' && computerChoice === 'sax') ||\r\n        (playerChoice === 'sax' && computerChoice === 'påse') ||\r\n        (playerChoice === 'påse' && computerChoice === 'sten')\r\n    ) {\r\n        currentScore++;\r\n        document.getElementById('winner').textContent = 'Du vann!';\r\n    } else {\r\n        document.getElementById('winner').textContent = 'Datorn vann!';\r\n        if (currentScore > 0) {\r\n            // Update highscore if a new record is achieved.\r\n            fetch('http://localhost:3000/highscores', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ name: currentPlayerName, score: currentScore })\r\n            }).then(() => {\r\n                currentScore = 0;\r\n                document.getElementById('score').textContent = currentScore;\r\n                GetHighscores();\r\n            });\r\n        }\r\n    }\r\n    document.getElementById('score').textContent = currentScore;\r\n}\r\n\r\nwindow.playRound = playRound;\r\n\r\n// Fetches and displays the highscore list from the server.\r\nfunction GetHighscores() {\r\n    fetch('http://localhost:3000/highscores')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            const highscoresList = document.getElementById('highscores');\r\n            highscoresList.innerHTML = '';\r\n            data.forEach(entry => {\r\n                const li = document.createElement('li');\r\n                li.textContent = `${entry.name}: ${entry.score}`;\r\n                highscoresList.append(li);\r\n            });\r\n        });\r\n}\r\n\r\n// Load highscores when the page is loaded.\r\nGetHighscores();\r\n"]}